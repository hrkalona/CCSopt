si2dr_liberty version 2.5
==========================

This package is a swig generated wrapper for the liberty
si2dr PI. Now, it's not finished yet. Basically, all I did
was use h2xs to generate the skeleton of a perl module.
I haven't had time to play with the makemaker stuff to
define the right things in Makefile.PL to get it to actually
build and install right yet. Any submissions will be welcome!

Right for the moment, you build the .so by running
"make perl/liberty.so" in the directory above. If you have
swig 1.3.31, and you want to play, the rules in the makefile
in the liberty_parse main directory should run it if you 
modify the .i file in this dir.


INSTALLATION

In an ideal world, To install this module type the following:

   perl Makefile.PL
   make
   make test
   make install

But, as I have not yet finished, you are not so lucky! In the
top level directory, you can say "make perl/liberty.so" to build
the liberty shared object, which perl will auto-load to access
the functions. You have to hand-copy the liberty.pm and liberty.so
files into your perl lib directories. Putting them in the @INC
search path should suffice.

DEPENDENCIES

This module requires these other modules and libraries:

  swig 1.3.31 (if you want to fix things up).
  the files that are used to make the si2dr_liberty library.

COPYRIGHT AND LICENCE

/******************************************************************************
    Copyright (c) 2007 Synopsys, Inc.    ALL RIGHTS RESERVED

  The contents of this file are subject to the restrictions and limitations
  set forth in the SYNOPSYS Open Source License Version 1.0  (the "License"); 
  you may not use this file except in compliance with such restrictions 
  and limitations. You may obtain instructions on how to receive a copy of 
  the License at

  http://www.synopsys.com/partners/tapin/tapinprogram.html. 

  Software distributed by Original Contributor under the License is 
  distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
  expressed or implied. See the License for the specific language governing 
  rights and limitations under the License.

******************************************************************************/

TO DO:

I need to finish the Makefile.pl so that the normal make sequence actually
works!

I can add Perl EXPORT statements to the liberty.i file so that
you don't have to keep inserting liberty:: in front of every
constant and function name.

Notes:

Purposely removed si2drDefineGetInfo() from the perl interface; in its place, 
use si2drDefineGetName(), si2drDefineGetAllowedGroupName(), and 
si2drDefineGetValueType().

Purposely removed si2drIterNextComplexValue() from the perl interface; in its
place, use si2drIterNextComplex(), and si2drComplexValGetValueType(),
si2drComplexValGetInt32Value(), si2drComplexValGetFloat64Value(),
si2drComplexValGetStringValue(), si2drComplexValGetBooleanValue(),
si2drComplexValGetExprValue().

The liberty_value_data helper functions are not included in this interface:
liberty_get_element(), liberty_destroy_value_data(), liberty_get_values_data(),
until an opaque interface can be invented, to access all the data there.

The t1.pl test illustrates how to use the interface in perl code.
It's really not so bad. the names of the functions are a bit long, but
you don't have to worry much about name collisions!

